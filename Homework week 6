Leetcode105. 从前序与中序遍历序列构造二叉树
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:
        def creat(pre_left, pre_right, in_left, in_right):
            if pre_left > pre_right:
                return
            root = TreeNode(preorder[pre_left])
            in_root_index = inorder.index(preorder[pre_left])
            left_length = in_root_index-in_left

            root.left = creat(pre_left+1, pre_left+left_length, in_left,in_root_index-1)
            root.right = creat(pre_left+left_length+1,pre_right,in_root_index+1,in_right)

            return root
        
        return creat(0,len(inorder)-1, 0, len(inorder)-1)

Leetcode226. 翻转二叉树
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        if not root:
            return 
        root.left, root.right = self.invertTree(root.right), self.invertTree(root.left)
        return root

Leetcode437. 路径总和 III
Leetcode236. 二叉树的最近公共祖先
Leetcode103. 二叉树的锯齿形层序遍历
Leetcode (extra)124. 二叉树中的最大路径和
